{"version":3,"file":"static/js/67.b56b284e.chunk.js","mappings":"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","sources":["components/AddForm/AddForm.styled.js","redux/contacts/selector.js","components/AddForm/AddForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import { Form } from 'formik';\nimport styled from 'styled-components';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 400px;\n  padding: 16px 20px 20px 20px;\n  border: 2px solid;\n  margin-bottom: 40px;\n`;\n\nexport const FormBtn = styled.button`\n  background-color: azure;\n  border-radius: 8px;\n  width: 160px;\n  margin-right: auto;\n  margin-left: auto;\n\n  &:hover,\n  &:focus {\n    background-color: cadetblue;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { Formik, Field, ErrorMessage } from 'formik';\nimport { FormBtn, StyledForm } from './AddForm.styled';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selector';\n\nconst Schema = Yup.object().shape({\n  name: Yup.string().min(2).required('must be filled'),\n  number: Yup.number('not a number').required('must be filled'),\n});\n\nexport const AddForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={Schema}\n      onSubmit={(value, actions) => {\n        if (\n          contacts.find(\n            contact => contact.name.toLowerCase() === value.name.toLowerCase()\n          )\n        ) {\n          return alert(`${value.name} is already in contacts`);\n        }\n        dispatch(addContact(value));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <label htmlFor=\"name\">Name</label>\n        <Field name=\"name\" />\n        <ErrorMessage name=\"name\" />\n\n        <label htmlFor=\"number\">Number</label>\n        <Field type=\"tel\" name=\"number\" />\n        <ErrorMessage name=\"number\" />\n\n        <FormBtn type=\"submit\">Add Contact</FormBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const DeleteBtn = styled.button`\n  margin-left: 20px;\n  background-color: azure;\n  border-radius: 8px;\n\n  &:hover,\n  &:focus {\n    background-color: cadetblue;\n  }\n`;\n\nexport const ContactItem = styled.li`\n  margin-bottom: 12px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { ContactItem, DeleteBtn } from './ContactList.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from '../../redux/contacts/selector';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectVisibleContacts);\n  return (\n    <ul>\n      {filteredContacts.map(contact => (\n        <ContactItem key={contact.id} id={contact.id}>\n          {contact.name}: {contact.number}\n          <DeleteBtn\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(contact.id))}\n          >\n            Delete\n          </DeleteBtn>\n        </ContactItem>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterField = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n  gap: 16px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { FilterField } from './Filter.styled';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <FilterField>\n      <label htmlFor=\"filter\">Find contacts by name</label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={evt => dispatch(setFilter(evt.target.value))}\n      />\n    </FilterField>\n  );\n};\n","import { AddForm } from 'components/AddForm/AddForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from '../redux/contacts/selector';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <AddForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader status={isLoading} />}\n      {error && <p>Sorry! {error}. Try again!</p>}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","FormBtn","_templateObject2","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","Schema","Yup","shape","min","required","number","AddForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","value","actions","find","alert","concat","addContact","resetForm","children","_jsxs","htmlFor","Field","ErrorMessage","type","DeleteBtn","ContactItem","ContactList","filteredContacts","map","id","onClick","deleteContact","FilterField","Filter","onChange","evt","setFilter","target","ContactsPage","useEffect","fetchContacts","_Fragment","Loader","status"],"sourceRoot":""}